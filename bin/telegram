#!/usr/bin/env ruby

ENV['RAILS_ENV'] = ENV['RAILS_ENV'] || 'development'

require File.expand_path('../../config/environment',  __FILE__)
require 'telegram/bot'


Rails.logger = ActiveSupport::Logger.new "log/telegram_#{Rails.env}.log"
Rails.logger.formatter = Logger::Formatter.new

Rails.logger.info 'Starting telegram bot loop...'


class TelegramBot
  def initialize
    @chat_service = ChatService.new
  end

  def run
    token = Rails.application.secrets[:telegram_bot_token]
    bot_id = @chat_service.bot_id

    Telegram::Bot::Client.run(token) do |bot|
      bot.listen do |msg|
        begin
          if msg.new_chat_participant.try(:id) == bot_id
            new_member msg
          elsif msg.text
            case msg.text.strip
              when '/configure'
                cmd_configure msg
            end
          end
        rescue
          Rails.logger.error $!
        end
      end
    end
  end

  protected

  def new_member(msg)
    Rails.logger.info "Received new member msg from #{msg.from.try(:username) || msg.from.try(:first_name)}"
    send_configure_text(msg)
  end

  def cmd_configure(msg)
    Rails.logger.info "Received /configure msg from #{msg.from.try(:username) || msg.from.try(:first_name)}"
    send_configure_text(msg)
  end

  def send_configure_text(msg)
    chat = @chat_service.create_chat msg
    configure_url = ChatService.configure_url chat

    @chat_service.send_update(chat, "Hello, please visit #{configure_url} to configure GitHub notifications for this chat.")
  end
end


TelegramBot.new.run